entity Task{
	title String required
	status TaskStatus
	description String
}
enum TaskStatus {
	ASSIGNED, NOT_ASSIGNED
}
entity AssignTask{
	taskAssignmentDate Instant
	taskStartDate Instant
	taskEndDate Instant
	description String
}
entity FraudInvestigationReport {
	title String required
    executiveSummary String
    introduction String required
    objective String required
    scope String
    limitation String
    methodology String required
    findingAndAnalysis String
    conclusion String
    recommendation String
    nameOfMembers String
    signature String
    annexes Blob
	//publicationDate ZonedDateTime,
    author String
}
entity FraudKnowledgeManagement{
	reportNumber Integer
	caseTitle String required
	fraudType String
	unit String
	incidentDate Instant
	reportDate Instant
	internalEmployee String
	externalCustomer String
	financialLossAmount Float
	causeForAnIncident String
	effect String
	recommendationsDrawn String
	positionJG String
	nameIdNo String
	actionInvolved String
	ngScreenerReport String
	statusAfterReporting String
}
entity ApplicationUser {
	teamLead Boolean
	gender Gender
	image ImageBlob
}
enum Gender {
MALE, FEMALE, OTHER
}
entity Team{
	name String required
	code String
}
entity Region {
	regionName String
    description String
}
entity Branch {
	branchName String
	description String
}
entity Department {
	departmentName String required
    description String
}
entity Division {
	description String
	divisionName String
}
relationship OneToOne {
	ApplicationUser{internalUser} to User
}
relationship OneToMany {
	User{UserRegion} to Region{User}
	User{UserDepartment} to Department{User}
    User{UserBranch} to Branch{User}
    User{UserDivision} to Division{User}
	Region{branch} to Branch{region(regionName)} 
	Branch to Department
	Department to Division
	FraudKnowledgeManagement to FraudInvestigationReport {type(fraudType)}
	Team{assignTask} to AssignTask{team(name)}
	Task{assignTask} to AssignTask{task(title)}
}
relationship ManyToMany{
	Team to User
}
// relationship OneToMany{
// 	User{report} to Report
// }
paginate FraudInvestigationReport with infinite-scroll
paginate Department with pagination
service all with serviceImpl except Department
